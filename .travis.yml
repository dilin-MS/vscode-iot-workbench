language: node_js

node_js:
- 'node'

services:
- docker

os:
- linux
dist: trusty # using Ubuntu 14.04.5 LTS

branches:
  only:
  - master
  - develop
  - /v?[0-9]+\.[0-9]+\.[0-9]+(.*)?/

env:
  global:
    - ISPRODTAG=^v?[0-9]+\.[0-9]+\.[0-9]+$
    - ISTESTTAG=^v?[0-9]+\.[0-9]+\.[0-9]+-[rR][cC]
    - RC_EXTENSION_ID="iotdevexbuild.test-owl-project"
    - NIGHTLY_BUILD_ID="dilin.vscode-iot-workbench-nightly"

install:
- sudo apt-get install libsecret-1-dev
- npm install -g vsce
- npm install

script:
- tsc --version
- gts --version
- gts check
- node scripts/updateConfig.js
- vsce package
- docker run -ti --rm -v $PWD:/mnt:ro dkhamsing/awesome_bot --allow-dupe --allow-redirect --skip-save-results `ls *.md`

before_deploy:
  # Set up git user name and tag this commit if nightly build
  - if [[ $TRAVIS_EVENT_TYPE == "cron" ]]; then
      git config --local user.name $USER_NAME &&
      git config --local user.email $USER_EMAIL &&
      git remote set-url origin https://dilin-MS:$GIT_TOKEN@github.com/dilin-MS/vscode-iot-workbench.git &&
      export TRAVIS_TAG="nightly-build" &&
      if [[ `git ls-remote --exit-code origin refs/tags/nightly-build` ]]; then git push --delete origin $TRAVIS_TAG; fi &&
      git tag -f $TRAVIS_TAG &&
      git push --tags -f;
    fi

deploy:
  # deploy to github release
  - provider: releases
    api_key: $GIT_TOKEN
    file_glob: true
    file: "*.vsix"
    skip_cleanup: true
    on:
      tags: true
      all_branches: true
  # deploy nightly build to github release
  - provider: releases
    api_key: $GIT_TOKEN
    overwrite: true
    file_glob: true
    file: "*.vsix"
    skip_cleanup: true
    on:
      branch: develop
      condition: "$TRAVIS_EVENT_TYPE = 'cron'"
  # deploy to vscode extension market
  - provider: script  
    script: vsce publish -p $VSCE_TOKEN --packagePath *.vsix
    skip_cleanup: true
    on:
      tags: true
      all_branches: true
      # if it's a PROD tag (something like 1.0.0), then publish extension to market.
      condition: "$TRAVIS_TAG =~ $ISPRODTAG"
  # deploy test version to vscode extension market
  - provider: script
    script: yes | vsce unpublish -p $VSCE_TEST_TOKEN $RC_EXTENSION_ID && vsce publish -p $VSCE_TEST_TOKEN --packagePath *.vsix
    skip_cleanup: true
    on:
      tags: true
      all_branches: true
      # if it's a test version tag (something like 1.0.0-rc), then publish test extension to market.
      condition: "$TRAVIS_TAG =~ $ISTESTTAG"
  # deploy nightly version to vscode extension market
  - provider: script
    script: yes | vsce unpublish -p $VSCE_TOKEN $NIGHTLY_BUILD_ID && vsce publish -p $VSCE_TOKEN --packagePath *.vsix
    skip_cleanup: true
    on:
      branch: develop
      condition: "$TRAVIS_EVENT_TYPE = 'cron'"